// Library lox:fs

import "lox:assert";

class File {
    construct(path) {
        assert(is(path, "string"), "Parameter to File constructor must be of type string.");

        this._path = _fs_absolute(path);
    }

    exists() {
        return _fs_stat_exists(this._path);
    }

    write(content, erase) {
        if (this.exists()) {
            return _fs_write_file(this._path, content, erase);
        }

        return false;
    }

    read() {
        if (this.exists()) {
            return _fs_read_file(this._path);   
        }

        return nil;
    }

    rename(name) {
        if (this.exists()) {
            assert(is(name, "string"), "File name must be of type string.");
            if(name = _fs_rename_file(this._path, name)) {
                this._path = name;print name;
                return true;
            }
        }

        return false;
    }

    copy(location) {
        if (this.exists()) {
            assert(is(location, "string"), "File name must be of type string.");
            let to = File(location);
            if (_fs_copy_file(this._path, to.path)) {
                return to;
            }

            return nil;
        }

        return nil;
    }

    create() {
        return _fs_create_file(this._path);
    }

    delete() {
        if (this.exists()) {
            return _fs_delete_file(this._path);
        }

        return false;
    }

    path {
        return this._path;
    }
}
