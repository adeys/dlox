// Library lox:fs

import "lox:assert";

class File {
    construct(path) {
        assert(is(path, "string"), "Parameter to File constructor must be of type string.");

        this.path = _fs_absolute(path);
        print 4 /0;
    }

    exits() {
        return _fs_stat_exists(this.path);
    }

    write(content, erase) {
        if (this.exits()) {
            return _fs_write_file(this.path, content, erase);
        }

        return false;
    }

    read() {
        if (this.exits()) {
            return _fs_read_file(this.path);   
        }

        return nil;
    }

    rename(name) {
        if (this.exits()) {
            assert(is(name, "string"), "File name must be of type string.");
            return _fs_rename_file(this.path, name);
        }

        return false;
    }

    copy(location) {
        if (this.exits()) {
            assert(is(location, "string"), "File name must be of type string.");
            return _fs_copy_file(this.path, location);
        }

        return false;
    }

    path {
        return this.path;
    }
}